# new-starter

> **Primary factors which account for successful integration of developers into a project were identified by Dagenais et al. in their study of integration into a new software project landscape [12]. They found that the main factors that impact developers joining a software development project are early experimentation, internalizing structures and cultures, and progress validation**
>
> _Jianguo Wang, M. S. - SUPPORTING DEVELOPER-ONBOARDING WITH ENHANCED RESOURCE FINDING AND VISUAL EXPLORATION_

### Early experimentation

Developers experiment with the codebase by performing small tasks to gain an understanding of the project.

- Allows the new developer to construct mental models of the project and process
- Prepares them for further exploration of the codebase

### Internalising structures

Developers identify relevant resources to help them succeed and finding their place within the project

-

## Impressions

- There is a period of adjustment on joining the company

  - Codebase is unfamiliar
  - No SOPs on developer workflow
    - Development Environment
    - Code style
    - Recommended IDE setup
    - Commit message style

- No go-to person to ask questions. Everyone is busy (nature of a startup)
- Doesn't appear to be a set workflow, outside of sprint planning
- New developer confidence to commit is low

  - No knowing if what they're doing will break something

- Permission and setup issues knock confidence when they block progress.
  - e.g. a task which works on a peer's machine but doesn't on the new developer's, with no obvious cause.

## Suggestions

[[testing]]

- Have the new starter write tests for bugs in projects
  - increases their familiarity with the codebase
  - gets them writing code early on, makes them feel they're contributing
  - improves their familiarity with the product/business logic
  - increases coverage

[[development-environment]]

- Standardise the development environment
  - Process documentation for producing lamdbas, for example
  - Automate developer setup to speed things up
- Add recommended VSCode extensions to a .vscode file
  - No lengthy setup of new machines
  - One-click and done for essential(?) extensions
  - Developer can then add whichever flavourful extensions they like (themes, colorisers, snippets etc.)

[//begin]: # "Autogenerated link references for markdown compatibility"
[testing]: testing "testing"
[development-environment]: development-environment "development-environment"
[//end]: # "Autogenerated link references"
